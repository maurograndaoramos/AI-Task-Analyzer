2025-05-25 19:26:15 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:26:17 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 19:26:19 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:26:19 - uvicorn.error - INFO - Started server process [8] [server.py:83]
2025-05-25 19:26:19 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 19:26:19 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 19:26:19 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 19:26:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:26:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:26:19 - uvicorn.access - INFO - 127.0.0.1:59558 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:26:49 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:26:49 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:26:49 - uvicorn.access - INFO - 127.0.0.1:40352 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:27:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:27:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:27:19 - uvicorn.access - INFO - 127.0.0.1:47840 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:27:49 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:27:49 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:27:49 - uvicorn.access - INFO - 127.0.0.1:51334 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:28:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:28:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:28:19 - uvicorn.access - INFO - 127.0.0.1:56838 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:28:49 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:28:49 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:28:49 - uvicorn.access - INFO - 127.0.0.1:39010 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:29:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:29:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:29:19 - uvicorn.access - INFO - 127.0.0.1:45054 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:29:49 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:29:49 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:29:49 - uvicorn.access - INFO - 127.0.0.1:55874 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:30:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:30:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:30:19 - uvicorn.access - INFO - 127.0.0.1:55886 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:30:49 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:30:49 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:30:49 - uvicorn.access - INFO - 127.0.0.1:41472 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:31:19 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:31:19 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:31:19 - uvicorn.access - INFO - 127.0.0.1:50952 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:31:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:31:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:31:50 - uvicorn.access - INFO - 127.0.0.1:50900 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:32:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:32:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:32:20 - uvicorn.access - INFO - 127.0.0.1:35888 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:32:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:32:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:32:50 - uvicorn.access - INFO - 127.0.0.1:33040 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:33:15 - app.core.middleware - INFO - Request: GET /docs from 172.19.0.1 [middleware.py:22]
2025-05-25 19:33:15 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 19:33:15 - uvicorn.access - INFO - 172.19.0.1:47770 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:33:15 - app.core.middleware - INFO - Request: GET /openapi.json from 172.19.0.1 [middleware.py:22]
2025-05-25 19:33:15 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 19:33:15 - uvicorn.access - INFO - 172.19.0.1:47770 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:33:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:33:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:33:20 - uvicorn.access - INFO - 127.0.0.1:45856 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:33:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:33:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:33:50 - uvicorn.access - INFO - 127.0.0.1:59912 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:34:09 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.19.0.1 [middleware.py:22]
2025-05-25 19:34:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:09 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:09 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:09 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:10 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:10 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:10 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:10 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:34:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:34:10 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:34:10 - app.services.task_service - ERROR - Error during comprehensive task analysis: no such table: tasks [task_service.py:197]
2025-05-25 19:34:10 - app.core.middleware - INFO - Response: 500 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 19:34:10 - uvicorn.access - INFO - 172.19.0.1:47778 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 19:34:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:34:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:34:20 - uvicorn.access - INFO - 127.0.0.1:47458 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:34:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:34:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:34:50 - uvicorn.access - INFO - 127.0.0.1:35312 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:35:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:35:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:35:20 - uvicorn.access - INFO - 127.0.0.1:60690 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:35:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:35:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:35:50 - uvicorn.access - INFO - 127.0.0.1:44052 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:36:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:36:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:36:20 - uvicorn.access - INFO - 127.0.0.1:58822 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:36:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:36:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:36:50 - uvicorn.access - INFO - 127.0.0.1:34824 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:37:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:37:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:37:20 - uvicorn.access - INFO - 127.0.0.1:46580 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:37:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:37:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:37:50 - uvicorn.access - INFO - 127.0.0.1:33102 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:38:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:38:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:38:20 - uvicorn.access - INFO - 127.0.0.1:37848 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:38:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:38:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:38:50 - uvicorn.access - INFO - 127.0.0.1:36066 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:39:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:39:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:39:20 - uvicorn.access - INFO - 127.0.0.1:48746 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:39:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:39:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:39:50 - uvicorn.access - INFO - 127.0.0.1:56144 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:40:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:40:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:40:20 - uvicorn.access - INFO - 127.0.0.1:49508 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:40:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:40:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:40:50 - uvicorn.access - INFO - 127.0.0.1:53690 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:41:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:41:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:41:20 - uvicorn.access - INFO - 127.0.0.1:42372 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:41:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:41:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:41:50 - uvicorn.access - INFO - 127.0.0.1:43138 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:42:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:42:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:42:20 - uvicorn.access - INFO - 127.0.0.1:46066 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:42:50 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:42:50 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:42:50 - uvicorn.access - INFO - 127.0.0.1:32986 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:43:20 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:43:20 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:43:20 - uvicorn.access - INFO - 127.0.0.1:54582 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:43:36 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 19:43:36 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 19:43:36 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 19:43:36 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 19:43:36 - uvicorn.error - INFO - Finished server process [8] [server.py:93]
2025-05-25 19:46:31 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:46:33 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 19:46:35 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:46:35 - uvicorn.error - INFO - Started server process [8] [server.py:83]
2025-05-25 19:46:35 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 19:46:35 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 19:46:35 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 19:46:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:46:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:46:36 - uvicorn.access - INFO - 127.0.0.1:54758 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:47:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:47:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:47:06 - uvicorn.access - INFO - 127.0.0.1:47524 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:47:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:47:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:47:36 - uvicorn.access - INFO - 127.0.0.1:36042 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:47:59 - app.core.middleware - INFO - Request: GET /docs from 172.18.0.1 [middleware.py:22]
2025-05-25 19:47:59 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 19:47:59 - uvicorn.access - INFO - 172.18.0.1:48366 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:47:59 - app.core.middleware - INFO - Request: GET /openapi.json from 172.18.0.1 [middleware.py:22]
2025-05-25 19:47:59 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 19:47:59 - uvicorn.access - INFO - 172.18.0.1:48366 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:48:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:48:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:48:06 - uvicorn.access - INFO - 127.0.0.1:37824 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:48:06 - app.core.middleware - INFO - Request: GET /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 19:48:06 - app.services.task_service - ERROR - Error retrieving tasks: no such table: tasks [task_service.py:217]
2025-05-25 19:48:06 - app.core.middleware - INFO - Response: 200 for GET /api/v1/tasks/ took 0.0s [middleware.py:35]
2025-05-25 19:48:06 - uvicorn.access - INFO - 172.18.0.1:34056 - "GET /api/v1/tasks/?limit=10 HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:48:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:48:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:48:36 - uvicorn.access - INFO - 127.0.0.1:50178 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:49:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:49:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:49:06 - uvicorn.access - INFO - 127.0.0.1:33680 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:49:07 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 19:49:07 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:07 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:07 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:07 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:07 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:07 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:07 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:08 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:08 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:08 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:08 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:09 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:49:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:49:09 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:49:09 - app.services.task_service - ERROR - Error during comprehensive task analysis: no such table: tasks [task_service.py:197]
2025-05-25 19:49:09 - app.core.middleware - INFO - Response: 500 for POST /api/v1/tasks/ took 1.8s [middleware.py:35]
2025-05-25 19:49:09 - uvicorn.access - INFO - 172.18.0.1:58182 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 19:49:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:49:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:49:36 - uvicorn.access - INFO - 127.0.0.1:51976 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:49:38 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 19:49:38 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 19:49:38 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 19:49:38 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 19:49:38 - uvicorn.error - INFO - Finished server process [8] [server.py:93]
2025-05-25 19:53:50 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:53:52 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 19:53:54 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 19:53:54 - uvicorn.error - INFO - Started server process [8] [server.py:83]
2025-05-25 19:53:54 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 19:53:54 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 19:53:54 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 19:53:54 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:53:54 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:53:54 - uvicorn.access - INFO - 127.0.0.1:46968 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:54:24 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:54:24 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:54:24 - uvicorn.access - INFO - 127.0.0.1:43972 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:54:51 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 19:54:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 19:54:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 19:54:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 19:54:52 - app.services.task_service - ERROR - Error during comprehensive task analysis: no such table: tasks [task_service.py:197]
2025-05-25 19:54:52 - app.core.middleware - INFO - Response: 500 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 19:54:52 - uvicorn.access - INFO - 172.18.0.1:45054 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 19:54:54 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:54:54 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:54:54 - uvicorn.access - INFO - 127.0.0.1:32832 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:55:24 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:55:24 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:55:24 - uvicorn.access - INFO - 127.0.0.1:55722 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:55:54 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:55:54 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:55:54 - uvicorn.access - INFO - 127.0.0.1:44636 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:56:24 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:56:24 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:56:24 - uvicorn.access - INFO - 127.0.0.1:53422 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:56:54 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 19:56:54 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 19:56:54 - uvicorn.access - INFO - 127.0.0.1:48600 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 19:57:04 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 19:57:05 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 19:57:05 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 19:57:05 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 19:57:05 - uvicorn.error - INFO - Finished server process [8] [server.py:93]
2025-05-25 20:00:42 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:00:44 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:00:46 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:00:46 - uvicorn.error - INFO - Started server process [8] [server.py:83]
2025-05-25 20:00:46 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:00:46 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:00:46 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 20:00:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:00:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:00:46 - uvicorn.access - INFO - 127.0.0.1:40270 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:01:17 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:01:17 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:01:17 - uvicorn.access - INFO - 127.0.0.1:59144 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:01:44 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 20:01:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:01:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=your-gemini-api-key-here "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 20:01:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 20:01:45 - app.services.task_service - ERROR - Error during comprehensive task analysis: no such table: tasks [task_service.py:197]
2025-05-25 20:01:45 - app.core.middleware - INFO - Response: 500 for POST /api/v1/tasks/ took 1.4s [middleware.py:35]
2025-05-25 20:01:45 - uvicorn.access - INFO - 172.18.0.1:59114 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 20:01:47 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:01:47 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:01:47 - uvicorn.access - INFO - 127.0.0.1:50034 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:02:17 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:02:17 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:02:17 - uvicorn.access - INFO - 127.0.0.1:36982 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:02:47 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:02:47 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:02:47 - uvicorn.access - INFO - 127.0.0.1:41468 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:03:05 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 20:03:05 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 20:03:05 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 20:03:05 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 20:03:05 - uvicorn.error - INFO - Finished server process [8] [server.py:93]
2025-05-25 20:09:32 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:09:33 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:09:36 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:09:36 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 20:09:36 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:09:36 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:09:36 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 20:09:36 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 20:09:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:09:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:09:36 - uvicorn.access - INFO - 127.0.0.1:58202 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:10:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:10:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:10:06 - uvicorn.access - INFO - 127.0.0.1:51366 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:10:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:10:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:10:36 - uvicorn.access - INFO - 127.0.0.1:40606 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:11:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:11:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:11:06 - uvicorn.access - INFO - 127.0.0.1:38456 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:11:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:11:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:11:36 - uvicorn.access - INFO - 127.0.0.1:44158 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:12:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:12:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:12:06 - uvicorn.access - INFO - 127.0.0.1:45062 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:12:16 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 20:12:16 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:17 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:17 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:17 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:20 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:20 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:20 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:21 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:21 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:21 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:23 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:23 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:23 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:23 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:23 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:23 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:25 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:25 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:25 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:25 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:25 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:25 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:27 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:27 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:27 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:29 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:29 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:29 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:29 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:29 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:29 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:12:31 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:12:31 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:12:31 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:31 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:31 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:12:31 - app.services.task_service - ERROR - Error during comprehensive task analysis: no such table: tasks [task_service.py:197]
2025-05-25 20:12:31 - app.core.middleware - INFO - Response: 500 for POST /api/v1/tasks/ took 15.3s [middleware.py:35]
2025-05-25 20:12:31 - uvicorn.access - INFO - 172.18.0.1:36240 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 20:12:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:12:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:12:36 - uvicorn.access - INFO - 127.0.0.1:50618 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:13:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:13:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:13:06 - uvicorn.access - INFO - 127.0.0.1:38260 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:13:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:13:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:13:36 - uvicorn.access - INFO - 127.0.0.1:38542 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:14:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:14:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:14:06 - uvicorn.access - INFO - 127.0.0.1:44212 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:14:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:14:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:14:36 - uvicorn.access - INFO - 127.0.0.1:36348 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:15:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:15:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:15:06 - uvicorn.access - INFO - 127.0.0.1:50058 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:15:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:15:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:15:36 - uvicorn.access - INFO - 127.0.0.1:35814 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:16:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:16:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:16:06 - uvicorn.access - INFO - 127.0.0.1:47234 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:16:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:16:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:16:36 - uvicorn.access - INFO - 127.0.0.1:46862 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:17:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:17:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:17:06 - uvicorn.access - INFO - 127.0.0.1:39774 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:17:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:17:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:17:36 - uvicorn.access - INFO - 127.0.0.1:49628 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:18:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:18:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:18:06 - uvicorn.access - INFO - 127.0.0.1:33154 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:18:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:18:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:18:36 - uvicorn.access - INFO - 127.0.0.1:54310 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:19:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:19:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:19:06 - uvicorn.access - INFO - 127.0.0.1:38676 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:19:36 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:19:36 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:19:36 - uvicorn.access - INFO - 127.0.0.1:47160 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:20:06 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:20:06 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:20:06 - uvicorn.access - INFO - 127.0.0.1:60770 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:20:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:20:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:20:37 - uvicorn.access - INFO - 127.0.0.1:37100 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:21:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:21:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:21:07 - uvicorn.access - INFO - 127.0.0.1:41848 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:21:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:21:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:21:37 - uvicorn.access - INFO - 127.0.0.1:40620 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:22:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:22:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:22:07 - uvicorn.access - INFO - 127.0.0.1:43822 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:22:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:22:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:22:37 - uvicorn.access - INFO - 127.0.0.1:48586 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:23:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:23:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:23:07 - uvicorn.access - INFO - 127.0.0.1:58726 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:23:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:23:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:23:37 - uvicorn.access - INFO - 127.0.0.1:43746 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:24:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:24:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:24:07 - uvicorn.access - INFO - 127.0.0.1:52106 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:24:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:24:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:24:37 - uvicorn.access - INFO - 127.0.0.1:57472 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:25:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:25:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:25:07 - uvicorn.access - INFO - 127.0.0.1:39002 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:25:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:25:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:25:37 - uvicorn.access - INFO - 127.0.0.1:58896 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:26:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:26:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:26:07 - uvicorn.access - INFO - 127.0.0.1:45522 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:26:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:26:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:26:37 - uvicorn.access - INFO - 127.0.0.1:53878 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:27:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:27:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:27:07 - uvicorn.access - INFO - 127.0.0.1:51138 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:27:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:27:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:27:37 - uvicorn.access - INFO - 127.0.0.1:46918 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:28:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:28:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:28:07 - uvicorn.access - INFO - 127.0.0.1:49758 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:28:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:28:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:28:37 - uvicorn.access - INFO - 127.0.0.1:40702 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:29:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:29:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:29:07 - uvicorn.access - INFO - 127.0.0.1:58592 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:29:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:29:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:29:37 - uvicorn.access - INFO - 127.0.0.1:44562 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:30:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:30:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:30:07 - uvicorn.access - INFO - 127.0.0.1:39368 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:30:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:30:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:30:37 - uvicorn.access - INFO - 127.0.0.1:49958 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:31:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:31:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:31:07 - uvicorn.access - INFO - 127.0.0.1:50628 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:31:35 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 20:31:35 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 20:31:35 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 20:31:35 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 20:31:35 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 20:32:59 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:33:01 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:33:03 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:33:03 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 20:33:03 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:33:03 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:33:03 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 692, in lifespan
    async with self.lifespan_context(app) as maybe_state:
  File "/usr/local/lib/python3.11/contextlib.py", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 133, in merged_lifespan
    async with original_context(app) as maybe_original_state:
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 569, in __aenter__
    await self._router.startup()
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 669, in startup
    await handler()
  File "/app/app/main.py", line 45, in startup
    create_tables() # Create tables if they don't exist
    ^^^^^^^^^^^^^^^
  File "/app/app/core/db.py", line 113, in create_tables
    metadata.create_all(engine)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5832, in create_all
    bind._run_ddl_visitor(
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3243, in _run_ddl_visitor
    with self.begin() as conn:
  File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3233, in begin
    with self.connect() as conn:
         ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3269, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3293, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 284, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 645, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py", line 352, in connect
    await_only(connection),
    ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 121, in await_only
    raise exc.MissingGreenlet(
sqlalchemy.exc.MissingGreenlet: greenlet_spawn has not been called; can't call await_only() here. Was IO attempted in an unexpected place? (Background on this error at: https://sqlalche.me/e/20/xd2s)
 [on.py:121]
2025-05-25 20:33:03 - uvicorn.error - ERROR - Application startup failed. Exiting. [on.py:59]
2025-05-25 20:36:37 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:36:38 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:36:39 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:36:39 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 20:36:39 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:36:40 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:36:40 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 692, in lifespan
    async with self.lifespan_context(app) as maybe_state:
  File "/usr/local/lib/python3.11/contextlib.py", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 133, in merged_lifespan
    async with original_context(app) as maybe_original_state:
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 569, in __aenter__
    await self._router.startup()
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 669, in startup
    await handler()
  File "/app/app/main.py", line 45, in startup
    create_tables() # Create tables if they don't exist
    ^^^^^^^^^^^^^^^
  File "/app/app/core/db.py", line 113, in create_tables
    metadata.create_all(engine)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5832, in create_all
    bind._run_ddl_visitor(
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3243, in _run_ddl_visitor
    with self.begin() as conn:
  File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3233, in begin
    with self.connect() as conn:
         ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3269, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3293, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 284, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 645, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py", line 352, in connect
    await_only(connection),
    ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 121, in await_only
    raise exc.MissingGreenlet(
sqlalchemy.exc.MissingGreenlet: greenlet_spawn has not been called; can't call await_only() here. Was IO attempted in an unexpected place? (Background on this error at: https://sqlalche.me/e/20/xd2s)
 [on.py:121]
2025-05-25 20:36:40 - uvicorn.error - ERROR - Application startup failed. Exiting. [on.py:59]
2025-05-25 20:39:53 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:39:54 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:39:57 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:39:57 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 20:39:57 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:39:57 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:39:57 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 692, in lifespan
    async with self.lifespan_context(app) as maybe_state:
  File "/usr/local/lib/python3.11/contextlib.py", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 133, in merged_lifespan
    async with original_context(app) as maybe_original_state:
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 569, in __aenter__
    await self._router.startup()
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 669, in startup
    await handler()
  File "/app/app/main.py", line 46, in startup
    await asyncio.to_thread(create_tables) # Create tables in a separate thread
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/asyncio/threads.py", line 25, in to_thread
    return await loop.run_in_executor(None, func_call)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/db.py", line 113, in create_tables
    metadata.create_all(engine)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5832, in create_all
    bind._run_ddl_visitor(
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3243, in _run_ddl_visitor
    with self.begin() as conn:
  File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3233, in begin
    with self.connect() as conn:
         ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3269, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3293, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 452, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1269, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 716, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 284, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 393, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 678, in __init__
    self.__connect()
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 902, in __connect
    with util.safe_reraise():
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 898, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 645, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 616, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/dialects/sqlite/aiosqlite.py", line 352, in connect
    await_only(connection),
    ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 121, in await_only
    raise exc.MissingGreenlet(
sqlalchemy.exc.MissingGreenlet: greenlet_spawn has not been called; can't call await_only() here. Was IO attempted in an unexpected place? (Background on this error at: https://sqlalche.me/e/20/xd2s)
 [on.py:121]
2025-05-25 20:39:57 - uvicorn.error - ERROR - Application startup failed. Exiting. [on.py:59]
2025-05-25 20:41:37 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:41:39 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:41:41 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:41:41 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 20:41:41 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 20:41:41 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 20:41:41 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 20:41:41 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 20:41:41 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:41:41 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:41:41 - uvicorn.access - INFO - 127.0.0.1:59258 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:42:11 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:42:11 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:42:11 - uvicorn.access - INFO - 127.0.0.1:47376 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:42:29 - app.core.middleware - INFO - Request: GET /docs from 172.18.0.1 [middleware.py:22]
2025-05-25 20:42:29 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 20:42:29 - uvicorn.access - INFO - 172.18.0.1:55088 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:42:29 - app.core.middleware - INFO - Request: GET /openapi.json from 172.18.0.1 [middleware.py:22]
2025-05-25 20:42:29 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 20:42:29 - uvicorn.access - INFO - 172.18.0.1:55088 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:42:41 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:42:41 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:42:41 - uvicorn.access - INFO - 127.0.0.1:48082 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:42:53 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 20:42:53 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:42:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:42:55 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:42:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:42:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:42:57 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:42:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:42:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:42:58 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:42:58 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:58 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:58 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:42:59 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:43:00 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:43:00 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:43:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:00 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:43:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:43:02 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:43:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:43:05 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:43:05 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:43:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:05 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:43:06 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:43:06 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:43:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:06 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 20:43:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 20:43:08 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 20:43:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 20:43:08 - app.core.middleware - ERROR - Error processing POST /api/v1/tasks/: 8 validation errors:
  {'type': 'list_type', 'loc': ('response', 'ux_recommendations'), 'msg': 'Input should be a valid list', 'input': {'error': 'Failed to generate user stories'}}
  {'type': 'list_type', 'loc': ('response', 'database_design'), 'msg': 'Input should be a valid list', 'input': {'tables': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 24 column 10 (char 595)"}}
  {'type': 'list_type', 'loc': ('response', 'technical_tasks'), 'msg': 'Input should be a valid list', 'input': {'tasks': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 10 column 6 (char 530)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ci_cd'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'monitoring'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'security_measures'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
 after 15.1s [middleware.py:47]
2025-05-25 20:43:08 - uvicorn.access - INFO - 172.18.0.1:55098 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 20:43:08 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    |     await self.simple_response(scope, receive, send, request_headers=headers)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 8 validation errors:
    |   {'type': 'list_type', 'loc': ('response', 'ux_recommendations'), 'msg': 'Input should be a valid list', 'input': {'error': 'Failed to generate user stories'}}
    |   {'type': 'list_type', 'loc': ('response', 'database_design'), 'msg': 'Input should be a valid list', 'input': {'tables': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 24 column 10 (char 595)"}}
    |   {'type': 'list_type', 'loc': ('response', 'technical_tasks'), 'msg': 'Input should be a valid list', 'input': {'tasks': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 10 column 6 (char 530)"}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ci_cd'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'monitoring'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'security_measures'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 8 validation errors:
  {'type': 'list_type', 'loc': ('response', 'ux_recommendations'), 'msg': 'Input should be a valid list', 'input': {'error': 'Failed to generate user stories'}}
  {'type': 'list_type', 'loc': ('response', 'database_design'), 'msg': 'Input should be a valid list', 'input': {'tables': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 24 column 10 (char 595)"}}
  {'type': 'list_type', 'loc': ('response', 'technical_tasks'), 'msg': 'Input should be a valid list', 'input': {'tasks': [], 'error': "JSON parsing error: Expecting ',' delimiter: line 10 column 6 (char 530)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ci_cd'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'monitoring'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'security_measures'), 'msg': 'Field required', 'input': {'infrastructure': {}, 'error': "JSON parsing error: Expecting ',' delimiter: line 25 column 6 (char 582)"}}

2025-05-25 20:43:11 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:43:11 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:43:11 - uvicorn.access - INFO - 127.0.0.1:56278 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:43:41 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:43:41 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:43:41 - uvicorn.access - INFO - 127.0.0.1:45342 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:44:11 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:44:11 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:44:11 - uvicorn.access - INFO - 127.0.0.1:52098 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:44:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:44:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:44:42 - uvicorn.access - INFO - 127.0.0.1:41006 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:45:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:45:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:45:12 - uvicorn.access - INFO - 127.0.0.1:45398 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:45:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:45:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:45:42 - uvicorn.access - INFO - 127.0.0.1:51080 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:46:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:46:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:46:12 - uvicorn.access - INFO - 127.0.0.1:51486 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:46:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:46:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:46:42 - uvicorn.access - INFO - 127.0.0.1:46490 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:47:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:47:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:47:12 - uvicorn.access - INFO - 127.0.0.1:33528 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:47:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:47:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:47:42 - uvicorn.access - INFO - 127.0.0.1:51074 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:48:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:48:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:48:12 - uvicorn.access - INFO - 127.0.0.1:35866 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:48:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:48:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:48:42 - uvicorn.access - INFO - 127.0.0.1:46308 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:49:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:49:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:49:12 - uvicorn.access - INFO - 127.0.0.1:41246 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:49:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:49:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:49:42 - uvicorn.access - INFO - 127.0.0.1:58790 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:50:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:50:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:50:12 - uvicorn.access - INFO - 127.0.0.1:46832 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:50:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:50:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:50:42 - uvicorn.access - INFO - 127.0.0.1:48708 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:51:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:51:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:51:12 - uvicorn.access - INFO - 127.0.0.1:39884 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:51:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:51:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:51:42 - uvicorn.access - INFO - 127.0.0.1:42866 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:52:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:52:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:52:12 - uvicorn.access - INFO - 127.0.0.1:59562 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:52:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:52:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:52:42 - uvicorn.access - INFO - 127.0.0.1:42910 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:53:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:53:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:53:12 - uvicorn.access - INFO - 127.0.0.1:47416 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:53:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:53:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:53:42 - uvicorn.access - INFO - 127.0.0.1:49098 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:54:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:54:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:54:12 - uvicorn.access - INFO - 127.0.0.1:35240 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:54:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:54:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:54:42 - uvicorn.access - INFO - 127.0.0.1:56428 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:55:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:55:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:55:12 - uvicorn.access - INFO - 127.0.0.1:42686 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:55:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:55:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:55:42 - uvicorn.access - INFO - 127.0.0.1:38134 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:56:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:56:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:56:12 - uvicorn.access - INFO - 127.0.0.1:48476 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:56:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:56:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:56:42 - uvicorn.access - INFO - 127.0.0.1:52784 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:57:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 20:57:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 20:57:12 - uvicorn.access - INFO - 127.0.0.1:44998 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 20:57:37 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 20:57:38 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 20:57:38 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 20:57:38 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 20:57:38 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 20:58:49 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 20:58:51 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:05:39 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:05:40 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:05:51 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:05:53 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:05:55 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:05:55 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:05:55 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:05:55 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:05:55 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:05:55 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:05:55 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:05:55 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:05:55 - uvicorn.access - INFO - 127.0.0.1:59170 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:05:58 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:05:58 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:00 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:00 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:00 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:02 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:02 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'User Stories Generation'. Original input (first 500 chars): ```json
{
  "user_stories": [
    {
      "role": "Database Administrator",
      "goal": "Create a `users` table with appropriate indexes on `email` and `username` fields",
      "benefit": "Ensure efficient user authentication and data retrieval, minimizing database query times and improving overall system performance.",
      "acceptance_criteria": [
        "The `users` table is created in the database with columns for `id`, `username`, `email`, `password`, `created_at`, and `updated_at`.",
 [json_parser.py:76]
2025-05-25 21:06:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:04 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:04 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:04 - app.utils.json_parser - WARNING - Failed to parse extracted JSON candidate in context 'DB Schema Design'. Error: Expecting ',' delimiter: line 19 column 10 (char 428). Candidate: {
  "tables": [
    {
      "name": "users",
      "fields": [
        {
          "name": "id",
          "type": "UUID",
          "primary_key": true,
          "description": "Unique user identifi... [json_parser.py:73]
2025-05-25 21:06:04 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'DB Schema Design'. Original input (first 500 chars): ```json
{
  "tables": [
    {
      "name": "users",
      "fields": [
        {
          "name": "id",
          "type": "UUID",
          "primary_key": true,
          "description": "Unique user identifier"
        },
        {
          "name": "username",
          "type": "VARCHAR(255)",
          "unique": true,
          "not_null": true,
          "indexed": true,
          "description": "User's login username"
        },
        {
          "name": "email",
          "type": "VARCHA [json_parser.py:76]
2025-05-25 21:06:04 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:06 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:06 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:06 - app.utils.json_parser - WARNING - Failed to parse extracted JSON candidate in context 'Task Breakdown'. Error: Expecting ',' delimiter: line 7 column 25 (char 564). Candidate: [
    {
      "id": "DB-1",
      "title": "Design User Table Schema",
      "description": "Define the schema for the users table. Include fields for: id (INT, primary key, auto-increment), username ... [json_parser.py:73]
2025-05-25 21:06:06 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'Task Breakdown'. Original input (first 500 chars): Okay, I understand. The goal is to break down the feature "Create the users table with proper indexes on email and username" into detailed technical tasks, considering the impact on login speed and overall system performance. I need to produce a JSON object containing these tasks, along with technical considerations and architectural decisions. Given the user story's emphasis on performance, I'll pay close attention to indexing strategies and data types.

Here's the breakdown and the JSON object [json_parser.py:76]
2025-05-25 21:06:06 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:08 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:08 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'Test Strategy Design'. Original input (first 500 chars): Okay, I understand. I need to create a JSON object that details a comprehensive test strategy for creating a "users" table with proper indexes on email and username. The key consideration is the impact of this table's performance on login speed. The test strategy should include unit, integration, and end-to-end tests, with a focus on test coverage, automation, and quality assurance processes. I'll need to define specific scenarios, coverage targets, automation tools, test data strategy, and qual [json_parser.py:76]
2025-05-25 21:06:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:10 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:10 - app.utils.json_parser - WARNING - Failed to parse extracted JSON candidate in context 'Security Analysis'. Error: Expecting ',' delimiter: line 9 column 8 (char 506). Candidate: {
  "risk_assessment": {
    "vulnerabilities": [
      {
        "type": "SQL Injection",
        "severity": "High",
        "description": "Improperly sanitized input used in queries related to use... [json_parser.py:73]
2025-05-25 21:06:10 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'Security Analysis'. Original input (first 500 chars): ```json
{
  "risk_assessment": {
    "vulnerabilities": [
      {
        "type": "SQL Injection",
        "severity": "High",
        "description": "Improperly sanitized input used in queries related to user creation or authentication can lead to SQL injection.  Even with parameterized queries, ORM misconfigurations can introduce this risk.",
        "mitigation": "Use parameterized queries or prepared statements with proper input validation and output encoding.  Regularly audit ORM configurat [json_parser.py:76]
2025-05-25 21:06:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:12 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:12 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:12 - app.utils.json_parser - WARNING - Failed to parse extracted JSON candidate in context 'Timeline Estimation'. Error: Expecting ',' delimiter: line 15 column 8 (char 356). Candidate: {
  "timeline": {
    "total_weeks": 6,
    "total_story_points": 90,
    "sprints": [
      {
        "sprint": 1,
        "tasks": ["BE-1: User Authentication", "FE-1: Login Page"],
        "story_p... [json_parser.py:73]
2025-05-25 21:06:12 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'Timeline Estimation'. Original input (first 500 chars): ```json
{
  "timeline": {
    "total_weeks": 6,
    "total_story_points": 90,
    "sprints": [
      {
        "sprint": 1,
        "tasks": ["BE-1: User Authentication", "FE-1: Login Page"],
        "story_points": 30
      },
      {
        "sprint": 2,
        "tasks": ["BE-2: Data Model Design", "FE-2: User Profile Page"],
        "story_points": 30
      },
      {
        "sprint": [json_parser.py:76]
2025-05-25 21:06:12 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:06:14 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:06:14 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:06:14 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:14 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:14 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:06:14 - app.utils.json_parser - ERROR - All attempts to parse JSON failed in context 'Infrastructure Plan'. Original input (first 500 chars): ```json
{
  "infrastructure": {
    "database": {
      "type": "managed_sql",
      "provider": "aws_rds_postgres",
      "instance_size": "db.t3.medium",
      "storage_gb": 50,
      "backup_strategy": "daily",
      "availability_zone": "multi-az",
      "indexes": [
        "email [json_parser.py:76]
2025-05-25 21:06:14 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 15.4s [middleware.py:35]
2025-05-25 21:06:14 - uvicorn.access - INFO - 172.18.0.1:42700 - "POST /api/v1/tasks/ HTTP/1.1" 201 [httptools_impl.py:476]
2025-05-25 21:06:25 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:06:25 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:06:25 - uvicorn.access - INFO - 127.0.0.1:55088 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:06:55 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:06:55 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:06:55 - uvicorn.access - INFO - 127.0.0.1:38472 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:07:26 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:07:26 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:07:26 - uvicorn.access - INFO - 127.0.0.1:43020 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:07:56 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:07:56 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:07:56 - uvicorn.access - INFO - 127.0.0.1:48578 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:08:26 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:08:26 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:08:26 - uvicorn.access - INFO - 127.0.0.1:34506 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:08:56 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:08:56 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:08:56 - uvicorn.access - INFO - 127.0.0.1:57822 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:09:26 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:09:26 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:09:26 - uvicorn.access - INFO - 127.0.0.1:44976 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:09:56 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:09:56 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:09:56 - uvicorn.access - INFO - 127.0.0.1:51756 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:10:26 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:10:26 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:10:26 - uvicorn.access - INFO - 127.0.0.1:33670 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:10:56 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:10:56 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:10:56 - uvicorn.access - INFO - 127.0.0.1:40196 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:10:57 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:10:57 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:10:57 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:10:57 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:10:57 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:11:51 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:11:53 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:11:56 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:11:56 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:11:56 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:11:56 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:11:56 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:11:56 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:11:56 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:11:56 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:11:56 - uvicorn.access - INFO - 127.0.0.1:39062 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:12:01 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:12:01 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:03 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:07 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:08 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:17 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:17 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:17 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:27 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:27 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:27 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:44 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:44 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:44 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:44 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:12:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:12:55 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:12:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:55 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:12:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:13:05 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:13:05 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:13:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:05 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:05 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:13:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:13:10 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:13:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:13:17 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:13:17 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:13:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:13:17 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:13:17 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:13:17 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:13:17 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:13:17 - app.core.middleware - ERROR - Error processing POST /api/v1/tasks/: 12 validation errors:
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
  {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'monitoring'), 'msg': 'Input should be a valid list', 'input': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}}
  {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'security_measures'), 'msg': 'Input should be a valid list', 'input': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ErrorResponse', 'error'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
 after 1.3m [middleware.py:47]
2025-05-25 21:13:17 - uvicorn.access - INFO - 172.18.0.1:39384 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:13:17 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    |     await self.simple_response(scope, receive, send, request_headers=headers)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 12 validation errors:
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
    |   {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'monitoring'), 'msg': 'Input should be a valid list', 'input': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}}
    |   {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'security_measures'), 'msg': 'Input should be a valid list', 'input': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}
    |   {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ErrorResponse', 'error'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 12 validation errors:
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'compute'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'storage'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}
  {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'monitoring'), 'msg': 'Input should be a valid list', 'input': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}}
  {'type': 'list_type', 'loc': ('response', 'infrastructure_plan', 'InfrastructureConfig', 'security_measures'), 'msg': 'Input should be a valid list', 'input': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}
  {'type': 'missing', 'loc': ('response', 'infrastructure_plan', 'ErrorResponse', 'error'), 'msg': 'Field required', 'input': {'infrastructure': {'compute': {'type': 'kubernetes', 'provider': 'aws', 'service': 'eks', 'sizing': {'initial_nodes': 2, 'autoscaling': {'min': 2, 'max': 5}, 'node_type': 't3.medium'}}, 'storage': {'type': 'managed_sql', 'provider': 'aws', 'service': 'rds', 'engine': 'postgresql', 'version': '14.7', 'instance_type': 'db.t3.medium', 'backup_strategy': 'daily', 'storage_size_gb': 50, 'iops': 1000, 'multi_az': True}, 'network': {'vpc': 'custom', 'subnet_configuration': 'private_with_nat', 'database_access': 'restricted_to_vpc'}}, 'ci_cd': {'version_control': {'type': 'git', 'repository': 'github'}, 'pipeline': {'tool': 'github_actions', 'stages': ['build', 'test', 'deploy']}, 'deployment_strategy': 'blue_green', 'database_migration_tool': 'liquibase'}, 'monitoring': {'application': {'tools': ['prometheus', 'grafana'], 'metrics': ['api_response_time', 'error_rates', 'cpu_usage', 'memory_usage']}, 'database': {'metrics': ['cpu_usage', 'disk_io', 'query_execution_time', 'active_connections'], 'alerting': {'query_execution_time': 'threshold_exceeded', 'cpu_usage': 'high'}}}, 'security_measures': {'web_application_firewall': {'provider': 'aws', 'service': 'waf'}, 'ssl_termination': {'enabled': True, 'certificate_source': 'aws_certificate_manager'}, 'database_security': {'encryption_at_rest': True, 'encryption_in_transit': True, 'access_control': 'vpc_only'}, 'container_scanning': 'enabled', 'vulnerability_scanning': 'enabled'}}}

2025-05-25 21:13:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:13:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:13:46 - uvicorn.access - INFO - 127.0.0.1:48788 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:14:16 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:14:16 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:14:16 - uvicorn.access - INFO - 127.0.0.1:35096 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:14:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:14:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:14:46 - uvicorn.access - INFO - 127.0.0.1:34444 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:15:16 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:15:16 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:15:16 - uvicorn.access - INFO - 127.0.0.1:41896 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:15:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:15:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:15:46 - uvicorn.access - INFO - 127.0.0.1:58378 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:16:16 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:16:16 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:16:16 - uvicorn.access - INFO - 127.0.0.1:50866 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:16:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:16:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:16:46 - uvicorn.access - INFO - 127.0.0.1:58872 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:17:11 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:17:12 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:17:12 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:17:12 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:17:12 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:18:50 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:18:52 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:18:54 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:18:54 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:18:54 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:18:54 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:18:54 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:18:54 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:18:55 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:18:55 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:18:55 - uvicorn.access - INFO - 127.0.0.1:45936 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:18:56 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:18:56 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:18:56 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:18:56 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:18:56 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:19:06 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:19:07 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:19:08 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:19:08 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:19:08 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:19:08 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:19:08 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:19:08 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:19:10 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:19:10 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:19:10 - uvicorn.access - INFO - 127.0.0.1:47540 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:19:40 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:19:40 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:19:40 - uvicorn.access - INFO - 127.0.0.1:36660 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:20:10 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:20:10 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:20:10 - uvicorn.access - INFO - 127.0.0.1:37130 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:20:26 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:20:26 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:20:27 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:20:27 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:20:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:27 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:27 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:20:33 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:20:33 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:20:33 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:33 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:33 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:33 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:20:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:20:41 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:20:41 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:41 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:41 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:20:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:20:49 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:20:49 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:49 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:49 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:20:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:21:06 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:21:06 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:21:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:06 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:06 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:21:22 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:21:22 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:21:22 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:22 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:22 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:22 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:21:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:21:37 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:21:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:21:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:21:47 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:21:47 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:47 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:47 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:21:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:22:00 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:22:00 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:22:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:22:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:22:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:22:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:22:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:22:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:22:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:22:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:22:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:22:00 - uvicorn.access - INFO - 127.0.0.1:46194 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:22:00 - app.core.middleware - ERROR - Error processing POST /api/v1/tasks/: 9 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'created_at'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'token'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'expires_at'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'timestamp'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the user.'}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'indexed': True, 'description': "User's email address (used for login)."}, {'name': 'password_hash', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password using a strong algorithm like bcrypt or Argon2.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was created.'}, {'name': 'updated_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was last updated.'}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active.'}, {'name': 'failed_login_attempts', 'type': 'INTEGER', 'default': 0, 'description': 'Number of failed login attempts.'}, {'name': 'last_failed_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp of the last failed login attempt.'}, {'name': 'lockout_until', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp until which the account is locked out due to too many failed attempts.'}], 'relationships': [{'table': 'password_reset_tokens', 'type': 'one_to_many', 'foreign_key': 'user_id'}], 'indexes': ['email', 'created_at']}, {'name': 'password_reset_tokens', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the reset token.'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'indexed': True, 'description': 'Foreign key referencing the user table.'}, {'name': 'token', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'The password reset token.'}, {'name': 'expires_at', 'type': 'TIMESTAMP', 'not_null': True, 'description': 'Timestamp indicating when the token expires.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the token was created.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'token', 'expires_at']}, {'name': 'login_attempts', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the login attempt.'}, {'name': 'user_id', 'type': 'UUID', 'nullable': True, 'indexed': True, 'description': "Foreign key referencing the user table (can be null if the user doesn't exist)."}, {'name': 'email', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Email address used for the login attempt.'}, {'name': 'ip_address', 'type': 'VARCHAR(45)', 'description': 'IP address of the login attempt.'}, {'name': 'timestamp', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of the login attempt.'}, {'name': 'success', 'type': 'BOOLEAN', 'description': 'Indicates if the login attempt was successful.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'email', 'timestamp']}]}
 after 1.6m [middleware.py:47]
2025-05-25 21:22:00 - uvicorn.access - INFO - 172.18.0.1:39310 - "POST /api/v1/tasks/ HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:22:00 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    |     await self.simple_response(scope, receive, send, request_headers=headers)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 9 validation errors:
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'created_at'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'token'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'expires_at'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'timestamp'}
    |   {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the user.'}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'indexed': True, 'description': "User's email address (used for login)."}, {'name': 'password_hash', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password using a strong algorithm like bcrypt or Argon2.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was created.'}, {'name': 'updated_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was last updated.'}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active.'}, {'name': 'failed_login_attempts', 'type': 'INTEGER', 'default': 0, 'description': 'Number of failed login attempts.'}, {'name': 'last_failed_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp of the last failed login attempt.'}, {'name': 'lockout_until', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp until which the account is locked out due to too many failed attempts.'}], 'relationships': [{'table': 'password_reset_tokens', 'type': 'one_to_many', 'foreign_key': 'user_id'}], 'indexes': ['email', 'created_at']}, {'name': 'password_reset_tokens', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the reset token.'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'indexed': True, 'description': 'Foreign key referencing the user table.'}, {'name': 'token', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'The password reset token.'}, {'name': 'expires_at', 'type': 'TIMESTAMP', 'not_null': True, 'description': 'Timestamp indicating when the token expires.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the token was created.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'token', 'expires_at']}, {'name': 'login_attempts', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the login attempt.'}, {'name': 'user_id', 'type': 'UUID', 'nullable': True, 'indexed': True, 'description': "Foreign key referencing the user table (can be null if the user doesn't exist)."}, {'name': 'email', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Email address used for the login attempt.'}, {'name': 'ip_address', 'type': 'VARCHAR(45)', 'description': 'IP address of the login attempt.'}, {'name': 'timestamp', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of the login attempt.'}, {'name': 'success', 'type': 'BOOLEAN', 'description': 'Indicates if the login attempt was successful.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'email', 'timestamp']}]}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 9 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'created_at'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'token'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 1, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'expires_at'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'user_id'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'email'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'list[DatabaseTable]', 2, 'indexes', 2), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': 'timestamp'}
  {'type': 'model_attributes_type', 'loc': ('response', 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the user.'}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'indexed': True, 'description': "User's email address (used for login)."}, {'name': 'password_hash', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password using a strong algorithm like bcrypt or Argon2.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was created.'}, {'name': 'updated_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the user account was last updated.'}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active.'}, {'name': 'failed_login_attempts', 'type': 'INTEGER', 'default': 0, 'description': 'Number of failed login attempts.'}, {'name': 'last_failed_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp of the last failed login attempt.'}, {'name': 'lockout_until', 'type': 'TIMESTAMP', 'nullable': True, 'description': 'Timestamp until which the account is locked out due to too many failed attempts.'}], 'relationships': [{'table': 'password_reset_tokens', 'type': 'one_to_many', 'foreign_key': 'user_id'}], 'indexes': ['email', 'created_at']}, {'name': 'password_reset_tokens', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the reset token.'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'indexed': True, 'description': 'Foreign key referencing the user table.'}, {'name': 'token', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'The password reset token.'}, {'name': 'expires_at', 'type': 'TIMESTAMP', 'not_null': True, 'description': 'Timestamp indicating when the token expires.'}, {'name': 'created_at', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of when the token was created.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'token', 'expires_at']}, {'name': 'login_attempts', 'fields': [{'name': 'id', 'type': 'UUID', 'primary_key': True, 'description': 'Unique identifier for the login attempt.'}, {'name': 'user_id', 'type': 'UUID', 'nullable': True, 'indexed': True, 'description': "Foreign key referencing the user table (can be null if the user doesn't exist)."}, {'name': 'email', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Email address used for the login attempt.'}, {'name': 'ip_address', 'type': 'VARCHAR(45)', 'description': 'IP address of the login attempt.'}, {'name': 'timestamp', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Timestamp of the login attempt.'}, {'name': 'success', 'type': 'BOOLEAN', 'description': 'Indicates if the login attempt was successful.'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id'}], 'indexes': ['user_id', 'email', 'timestamp']}]}

2025-05-25 21:22:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:22:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:22:30 - uvicorn.access - INFO - 127.0.0.1:57908 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:23:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:23:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:23:01 - uvicorn.access - INFO - 127.0.0.1:48796 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:23:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:23:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:23:31 - uvicorn.access - INFO - 127.0.0.1:36532 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:24:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:24:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:24:01 - uvicorn.access - INFO - 127.0.0.1:35312 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:24:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:24:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:24:31 - uvicorn.access - INFO - 127.0.0.1:34174 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:25:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:25:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:25:01 - uvicorn.access - INFO - 127.0.0.1:47304 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:25:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:25:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:25:31 - uvicorn.access - INFO - 127.0.0.1:47086 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:26:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:26:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:26:01 - uvicorn.access - INFO - 127.0.0.1:53290 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:26:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:26:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:26:31 - uvicorn.access - INFO - 127.0.0.1:53976 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:27:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:27:01 - uvicorn.access - INFO - 127.0.0.1:41308 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:05 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:27:05 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:27:05 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:27:05 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:27:05 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:27:07 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:27:09 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:27:11 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:27:11 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:27:11 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:27:11 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:27:11 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:27:11 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:27:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:27:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:27:12 - uvicorn.access - INFO - 127.0.0.1:48170 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:42 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:27:42 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:27:42 - uvicorn.access - INFO - 127.0.0.1:57884 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:52 - app.core.middleware - INFO - Request: GET /docs from 172.18.0.1 [middleware.py:22]
2025-05-25 21:27:52 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 21:27:52 - uvicorn.access - INFO - 172.18.0.1:36228 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:52 - app.core.middleware - INFO - Request: GET /openapi.json from 172.18.0.1 [middleware.py:22]
2025-05-25 21:27:52 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 21:27:52 - uvicorn.access - INFO - 172.18.0.1:36228 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:27:56 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:27:56 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:27:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:27:57 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:27:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:27:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:27:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:27:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:28:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:28:02 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:28:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:02 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:28:08 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:28:08 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:28:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:08 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:08 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:28:20 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:28:20 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:28:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:20 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:20 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:28:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:28:37 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:28:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:28:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:29:01 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:29:01 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:29:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:01 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:29:17 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:29:17 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:29:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:17 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:17 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:29:24 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:29:24 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:29:24 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:24 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:24 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:24 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:29:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:29:37 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:29:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:37 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:29:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:29:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:29:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:29:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:29:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:29:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:29:37 - uvicorn.access - INFO - 127.0.0.1:47160 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:29:37 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.7m [middleware.py:35]
2025-05-25 21:29:37 - uvicorn.access - INFO - 172.18.0.1:36228 - "POST /api/v1/tasks/ HTTP/1.1" 201 [httptools_impl.py:476]
2025-05-25 21:30:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:30:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:30:07 - uvicorn.access - INFO - 127.0.0.1:53310 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:30:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:30:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:30:37 - uvicorn.access - INFO - 127.0.0.1:43376 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:30:41 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:30:41 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:30:41 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:30:41 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:30:41 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:35:30 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:35:31 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:35:32 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:35:32 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:35:32 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:35:32 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:35:32 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:35:32 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:35:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:35:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:35:35 - uvicorn.access - INFO - 127.0.0.1:45306 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:35:44 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:35:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:35:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:35:45 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:35:45 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:45 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:45 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:35:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:35:50 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:35:50 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:50 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:50 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:35:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:03 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:03 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:10 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:10 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:19 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:19 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:19 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:19 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:19 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:19 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:43 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:54 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:54 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:54 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:54 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:54 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:54 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:36:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:36:57 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:36:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:57 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:36:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:37:10 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:37:10 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:37:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:37:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:37:10 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:37:10 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:37:10 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:37:10 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:37:10 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:37:10 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.4m [middleware.py:35]
2025-05-25 21:37:10 - uvicorn.access - INFO - 172.18.0.1:56398 - "POST /api/v1/tasks/ HTTP/1.1" 201 [httptools_impl.py:476]
2025-05-25 21:37:25 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:37:25 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:37:25 - uvicorn.access - INFO - 127.0.0.1:44240 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:37:55 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:37:55 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:37:55 - uvicorn.access - INFO - 127.0.0.1:49188 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:38:25 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:38:25 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:38:25 - uvicorn.access - INFO - 127.0.0.1:60768 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:38:42 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:38:42 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:38:42 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:38:42 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:38:42 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:44:11 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:44:13 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:44:15 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:44:15 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:44:15 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:44:15 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:44:15 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:44:15 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:44:16 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:44:16 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:44:16 - uvicorn.access - INFO - 127.0.0.1:51720 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:44:23 - app.core.middleware - INFO - Request: GET /docs from 172.19.0.1 [middleware.py:22]
2025-05-25 21:44:23 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 21:44:23 - uvicorn.access - INFO - 172.19.0.1:39564 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:44:23 - app.core.middleware - INFO - Request: GET /openapi.json from 172.19.0.1 [middleware.py:22]
2025-05-25 21:44:23 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 21:44:23 - uvicorn.access - INFO - 172.19.0.1:39564 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:44:28 - app.core.middleware - INFO - Request: GET /api/v1/tasks/ from 172.19.0.1 [middleware.py:22]
2025-05-25 21:44:28 - app.core.middleware - ERROR - Error processing GET /api/v1/tasks/: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
 after 0.0s [middleware.py:47]
2025-05-25 21:44:28 - uvicorn.access - INFO - 172.19.0.1:39564 - "GET /api/v1/tasks/?limit=10 HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:44:28 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 9 validation errors:
    |   {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
    |   {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}

2025-05-25 21:44:46 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:44:46 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:44:46 - uvicorn.access - INFO - 127.0.0.1:46320 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:45:16 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:45:16 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:45:16 - uvicorn.access - INFO - 127.0.0.1:50724 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:45:41 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 21:45:41 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 21:45:41 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 21:45:41 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 21:45:41 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 21:46:05 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:46:06 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:46:07 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 21:46:07 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 21:46:07 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 21:46:07 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 21:46:07 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 21:46:07 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 21:46:10 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:46:10 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:46:10 - uvicorn.access - INFO - 127.0.0.1:50066 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:46:11 - app.core.middleware - INFO - Request: GET /docs from 172.18.0.1 [middleware.py:22]
2025-05-25 21:46:11 - app.core.middleware - INFO - Response: 200 for GET /docs took 0.0s [middleware.py:35]
2025-05-25 21:46:11 - uvicorn.access - INFO - 172.18.0.1:41876 - "GET /docs HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:46:12 - app.core.middleware - INFO - Request: GET /openapi.json from 172.18.0.1 [middleware.py:22]
2025-05-25 21:46:12 - app.core.middleware - INFO - Response: 200 for GET /openapi.json took 0.0s [middleware.py:35]
2025-05-25 21:46:12 - uvicorn.access - INFO - 172.18.0.1:41876 - "GET /openapi.json HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:46:15 - app.core.middleware - INFO - Request: GET /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:46:15 - app.core.middleware - ERROR - Error processing GET /api/v1/tasks/: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
 after 0.0s [middleware.py:47]
2025-05-25 21:46:15 - uvicorn.access - INFO - 172.18.0.1:41876 - "GET /api/v1/tasks/?limit=10 HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:46:15 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 9 validation errors:
    |   {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
    |   {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}

2025-05-25 21:46:40 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:46:40 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:46:40 - uvicorn.access - INFO - 127.0.0.1:59788 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:46:55 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:46:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:46:56 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:46:56 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:46:56 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:46:56 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:46:56 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:46:56 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:47:01 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:47:01 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:47:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:01 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:01 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:47:09 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:47:09 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:47:09 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:09 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:09 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:09 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:47:21 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:47:21 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:47:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:21 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:21 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:47:30 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:47:30 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:47:30 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:30 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:30 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:30 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:47:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:47:43 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:47:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:43 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:47:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:48:00 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:48:00 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:48:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:00 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:00 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:48:04 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:48:04 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:48:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:04 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:04 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 21:48:12 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBJj4yVeMQ8Ib18QZOGa8rBPLnPwFzBOIM "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 21:48:12 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler [utils.py:1185]
2025-05-25 21:48:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:12 - LiteLLM - INFO - selected model name for cost calculation: gemini/gemini-2.0-flash [cost_calculator.py:655]
2025-05-25 21:48:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:48:12 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:48:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:48:12 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:48:12 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.3m [middleware.py:35]
2025-05-25 21:48:12 - uvicorn.access - INFO - 172.18.0.1:41890 - "POST /api/v1/tasks/ HTTP/1.1" 201 [httptools_impl.py:476]
2025-05-25 21:48:29 - app.core.middleware - INFO - Request: GET /api/v1/tasks/ from 172.18.0.1 [middleware.py:22]
2025-05-25 21:48:29 - app.core.middleware - ERROR - Error processing GET /api/v1/tasks/: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
 after 0.0s [middleware.py:47]
2025-05-25 21:48:29 - uvicorn.access - INFO - 172.18.0.1:43862 - "GET /api/v1/tasks/?limit=10 HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:48:29 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 9 validation errors:
    |   {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
    |   {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
    |   {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 9 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 0, 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 0, 'status'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 0, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 1, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 2, 'indexes', 1), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}}
  {'type': 'string_type', 'loc': ('response', 2, 'database_design', 'list[DatabaseTable]', 3, 'indexes', 0), 'msg': 'Input should be a valid string', 'input': {'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}}
  {'type': 'model_attributes_type', 'loc': ('response', 2, 'database_design', 'ErrorResponse'), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': [{'name': 'users', 'fields': [{'name': 'user_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user'}, {'name': 'username', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's username for login"}, {'name': 'email', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': "User's email address"}, {'name': 'password', 'type': 'VARCHAR(255)', 'not_null': True, 'description': 'Hashed password'}, {'name': 'creation_date', 'type': 'TIMESTAMP', 'default': 'CURRENT_TIMESTAMP', 'description': 'Date and time the user account was created'}, {'name': 'last_login', 'type': 'TIMESTAMP', 'nullable': True, 'description': "Date and time of the user's last login"}, {'name': 'is_active', 'type': 'BOOLEAN', 'default': True, 'description': 'Indicates if the user account is active'}, {'name': 'first_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's first name"}, {'name': 'last_name', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "User's last name"}], 'indexes': [{'name': 'idx_users_email', 'columns': ['email'], 'unique': True, 'description': 'Index for email lookups'}, {'name': 'idx_users_username', 'columns': ['username'], 'unique': True, 'description': 'Index for username lookups'}], 'relationships': [{'table': 'user_profiles', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user profile information'}, {'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'user_id', 'description': 'Links to user roles'}]}, {'name': 'user_profiles', 'fields': [{'name': 'profile_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user profile'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'profile_picture', 'type': 'VARCHAR(255)', 'nullable': True, 'description': "URL to the user's profile picture"}, {'name': 'bio', 'type': 'TEXT', 'nullable': True, 'description': "User's biography"}], 'indexes': [{'name': 'idx_user_profiles_user_id', 'columns': ['user_id'], 'unique': True, 'description': 'Index for user_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'one_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}]}, {'name': 'user_roles', 'fields': [{'name': 'user_role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the user role'}, {'name': 'user_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the users table'}, {'name': 'role_id', 'type': 'UUID', 'not_null': True, 'description': 'Foreign key referencing the roles table'}], 'indexes': [{'name': 'idx_user_roles_user_id', 'columns': ['user_id'], 'description': 'Index for user_id foreign key'}, {'name': 'idx_user_roles_role_id', 'columns': ['role_id'], 'description': 'Index for role_id foreign key'}], 'relationships': [{'table': 'users', 'type': 'many_to_one', 'foreign_key': 'user_id', 'description': 'Links to user information'}, {'table': 'roles', 'type': 'many_to_one', 'foreign_key': 'role_id', 'description': 'Links to role information'}]}, {'name': 'roles', 'fields': [{'name': 'role_id', 'type': 'UUID', 'primary_key': True, 'auto_increment': True, 'description': 'Unique identifier for the role'}, {'name': 'role_name', 'type': 'VARCHAR(255)', 'unique': True, 'not_null': True, 'description': 'Name of the role'}, {'name': 'description', 'type': 'TEXT', 'nullable': True, 'description': 'Description of the role'}], 'indexes': [{'name': 'idx_roles_role_name', 'columns': ['role_name'], 'unique': True, 'description': 'Index for role name lookups'}], 'relationships': [{'table': 'user_roles', 'type': 'one_to_many', 'foreign_key': 'role_id', 'description': 'Links to user roles'}]}]}

2025-05-25 21:48:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:48:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:48:30 - uvicorn.access - INFO - 127.0.0.1:33222 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:49:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:49:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:49:00 - uvicorn.access - INFO - 127.0.0.1:39614 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:49:16 - app.core.middleware - INFO - Request: GET /api/v1/tasks/1 from 172.18.0.1 [middleware.py:22]
2025-05-25 21:49:16 - app.core.middleware - ERROR - Error processing GET /api/v1/tasks/1: 2 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 'status'), 'msg': 'Input should be a valid string', 'input': None}
 after 0.0s [middleware.py:47]
2025-05-25 21:49:16 - uvicorn.access - INFO - 172.18.0.1:42588 - "GET /api/v1/tasks/1 HTTP/1.1" 500 [httptools_impl.py:476]
2025-05-25 21:49:16 - uvicorn.error - ERROR - Exception in ASGI application
 [httptools_impl.py:414]
  + Exception Group Traceback (most recent call last):
  |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 76, in collapse_excgroups
  |     yield
  |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 177, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py", line 678, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    |     result = await app(  # type: ignore[func-returns-value]
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    |     return await self.app(scope, receive, send)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |   File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/app/app/core/middleware.py", line 29, in dispatch
    |     response = await call_next(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    |     raise app_exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    |     await self.app(scope, receive_or_disconnect, send_no_error)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    |     await route.handle(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    |     await self.app(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    |     raise exc
    |   File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    |     await app(scope, receive, sender)
    |   File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    |     response = await f(request)
    |                ^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    |     content = await serialize_response(
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    |     raise ResponseValidationError(
    | fastapi.exceptions.ResponseValidationError: 2 validation errors:
    |   {'type': 'datetime_type', 'loc': ('response', 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
    |   {'type': 'string_type', 'loc': ('response', 'status'), 'msg': 'Input should be a valid string', 'input': None}
    | 
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 176, in __call__
    with recv_stream, send_stream, collapse_excgroups():
  File "/usr/local/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/usr/local/lib/python3.11/site-packages/starlette/_utils.py", line 82, in collapse_excgroups
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 178, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/app/core/middleware.py", line 29, in dispatch
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 156, in call_next
    raise app_exc
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py", line 85, in __call__
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 2 validation errors:
  {'type': 'datetime_type', 'loc': ('response', 'updated_at'), 'msg': 'Input should be a valid datetime', 'input': None}
  {'type': 'string_type', 'loc': ('response', 'status'), 'msg': 'Input should be a valid string', 'input': None}

2025-05-25 21:49:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:49:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:49:30 - uvicorn.access - INFO - 127.0.0.1:60128 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:50:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:50:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:50:00 - uvicorn.access - INFO - 127.0.0.1:37472 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:50:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:50:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:50:30 - uvicorn.access - INFO - 127.0.0.1:47220 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:51:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:51:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:51:00 - uvicorn.access - INFO - 127.0.0.1:41212 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:51:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:51:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:51:30 - uvicorn.access - INFO - 127.0.0.1:47702 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:52:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:52:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:52:00 - uvicorn.access - INFO - 127.0.0.1:42376 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:52:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:52:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:52:30 - uvicorn.access - INFO - 127.0.0.1:48496 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:53:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:53:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:53:00 - uvicorn.access - INFO - 127.0.0.1:37934 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:53:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:53:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:53:30 - uvicorn.access - INFO - 127.0.0.1:47098 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:54:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:54:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:54:00 - uvicorn.access - INFO - 127.0.0.1:33526 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:54:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:54:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:54:30 - uvicorn.access - INFO - 127.0.0.1:36488 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:55:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:55:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:55:00 - uvicorn.access - INFO - 127.0.0.1:59596 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:55:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:55:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:55:30 - uvicorn.access - INFO - 127.0.0.1:51664 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:56:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:56:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:56:00 - uvicorn.access - INFO - 127.0.0.1:51248 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:56:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:56:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:56:30 - uvicorn.access - INFO - 127.0.0.1:55050 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:57:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:57:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:57:00 - uvicorn.access - INFO - 127.0.0.1:46610 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:57:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:57:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:57:30 - uvicorn.access - INFO - 127.0.0.1:39084 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:58:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:58:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:58:00 - uvicorn.access - INFO - 127.0.0.1:43462 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:58:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:58:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:58:30 - uvicorn.access - INFO - 127.0.0.1:42698 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:59:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:59:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:59:00 - uvicorn.access - INFO - 127.0.0.1:40460 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 21:59:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 21:59:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 21:59:30 - uvicorn.access - INFO - 127.0.0.1:36586 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:00:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:00:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:00:00 - uvicorn.access - INFO - 127.0.0.1:39304 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:00:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:00:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:00:30 - uvicorn.access - INFO - 127.0.0.1:37902 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:01:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:01:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:01:00 - uvicorn.access - INFO - 127.0.0.1:39984 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:01:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:01:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:01:30 - uvicorn.access - INFO - 127.0.0.1:44746 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:02:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:02:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:02:00 - uvicorn.access - INFO - 127.0.0.1:50506 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:02:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:02:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:02:30 - uvicorn.access - INFO - 127.0.0.1:59704 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:03:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:03:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:03:00 - uvicorn.access - INFO - 127.0.0.1:47460 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:03:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:03:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:03:30 - uvicorn.access - INFO - 127.0.0.1:54512 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:04:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:04:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:04:00 - uvicorn.access - INFO - 127.0.0.1:51670 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:04:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:04:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:04:30 - uvicorn.access - INFO - 127.0.0.1:36830 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:05:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:05:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:05:00 - uvicorn.access - INFO - 127.0.0.1:40274 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:05:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:05:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:05:30 - uvicorn.access - INFO - 127.0.0.1:52366 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:06:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:06:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:06:00 - uvicorn.access - INFO - 127.0.0.1:40476 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:06:30 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:06:30 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:06:30 - uvicorn.access - INFO - 127.0.0.1:33314 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:07:00 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:07:00 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:07:00 - uvicorn.access - INFO - 127.0.0.1:58868 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:07:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:07:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:07:31 - uvicorn.access - INFO - 127.0.0.1:59062 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:08:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:08:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:08:01 - uvicorn.access - INFO - 127.0.0.1:49608 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:08:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:08:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:08:31 - uvicorn.access - INFO - 127.0.0.1:50910 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:09:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:09:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:09:01 - uvicorn.access - INFO - 127.0.0.1:52164 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:09:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:09:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:09:31 - uvicorn.access - INFO - 127.0.0.1:34848 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:10:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:10:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:10:01 - uvicorn.access - INFO - 127.0.0.1:52236 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:10:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:10:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:10:31 - uvicorn.access - INFO - 127.0.0.1:59876 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:11:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:11:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:11:01 - uvicorn.access - INFO - 127.0.0.1:41876 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:11:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:11:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:11:31 - uvicorn.access - INFO - 127.0.0.1:49172 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:12:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:12:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:12:01 - uvicorn.access - INFO - 127.0.0.1:47542 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:12:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:12:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:12:31 - uvicorn.access - INFO - 127.0.0.1:36102 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:13:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:13:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:13:01 - uvicorn.access - INFO - 127.0.0.1:46664 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:13:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:13:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:13:31 - uvicorn.access - INFO - 127.0.0.1:51512 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:14:01 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:14:01 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:14:01 - uvicorn.access - INFO - 127.0.0.1:41606 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:14:31 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:14:31 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:14:31 - uvicorn.access - INFO - 127.0.0.1:48068 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:14:36 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 22:14:36 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 22:14:36 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 22:14:36 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 22:14:36 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 22:28:33 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:28:34 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:28:35 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:28:35 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 22:28:35 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 22:28:35 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 22:28:35 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 22:28:35 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 22:28:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:28:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:28:37 - uvicorn.access - INFO - 127.0.0.1:49402 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:29:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:29:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:29:07 - uvicorn.access - INFO - 127.0.0.1:54744 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:29:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:29:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:29:37 - uvicorn.access - INFO - 127.0.0.1:56426 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:30:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:30:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:30:07 - uvicorn.access - INFO - 127.0.0.1:42196 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:30:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:30:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:30:37 - uvicorn.access - INFO - 127.0.0.1:42944 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:31:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:31:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:31:07 - uvicorn.access - INFO - 127.0.0.1:32898 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:31:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:31:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:31:37 - uvicorn.access - INFO - 127.0.0.1:53498 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:32:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:32:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:32:07 - uvicorn.access - INFO - 127.0.0.1:47634 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:32:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:32:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:32:38 - uvicorn.access - INFO - 127.0.0.1:49030 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:33:08 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:33:08 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:33:08 - uvicorn.access - INFO - 127.0.0.1:37362 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:33:38 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:33:38 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:33:38 - uvicorn.access - INFO - 127.0.0.1:50272 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:34:08 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:34:08 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:34:08 - uvicorn.access - INFO - 127.0.0.1:38754 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:34:09 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 22:34:09 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 22:34:09 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 22:34:09 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 22:34:09 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 22:36:02 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:36:04 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:36:06 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:36:06 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 22:36:06 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 22:36:06 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 22:36:06 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 22:36:06 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 22:36:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:36:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:36:07 - uvicorn.access - INFO - 127.0.0.1:38306 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:36:37 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:36:37 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:36:37 - uvicorn.access - INFO - 127.0.0.1:49568 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:37:07 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:37:07 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:37:07 - uvicorn.access - INFO - 127.0.0.1:40850 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:37:25 - uvicorn.error - INFO - Shutting down [server.py:263]
2025-05-25 22:37:25 - uvicorn.error - INFO - Waiting for application shutdown. [on.py:67]
2025-05-25 22:37:25 - databases - INFO - Disconnected from database sqlite+aiosqlite:///./data/app.db [core.py:149]
2025-05-25 22:37:25 - uvicorn.error - INFO - Application shutdown complete. [on.py:76]
2025-05-25 22:37:25 - uvicorn.error - INFO - Finished server process [1] [server.py:93]
2025-05-25 22:37:30 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:37:32 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:37:33 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:37:34 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:37:34 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:37:34 - uvicorn.error - INFO - Started server process [1] [server.py:83]
2025-05-25 22:37:34 - uvicorn.error - INFO - Waiting for application startup. [on.py:48]
2025-05-25 22:37:34 - databases - INFO - Connected to database sqlite+aiosqlite:///./data/app.db [core.py:113]
2025-05-25 22:37:34 - uvicorn.error - INFO - Application startup complete. [on.py:62]
2025-05-25 22:37:34 - uvicorn.error - INFO - Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit) [server.py:215]
2025-05-25 22:37:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:37:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:37:35 - uvicorn.access - INFO - 127.0.0.1:57180 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:37:35 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:35 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [task_service.py:115]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:35 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [task_service.py:115]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:37:36 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:36 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:36 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:36 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:36 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:36 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:36 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:36 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:36 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:36 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:37 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:37 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:37 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:37 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:37 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:37 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.6s [middleware.py:35]
2025-05-25 22:37:37 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:37 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:37 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:38 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:38 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:38 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:38 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:38 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:38 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:38 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:38 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:38 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:38 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:38 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:38 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:38 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:39 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:39 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:39 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:39 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:39 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:39 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:39 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:39 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:39 - app.core.middleware - INFO - Request: GET /api/v1/tasks/None from testclient [middleware.py:22]
2025-05-25 22:37:39 - app.core.middleware - INFO - Response: 422 for GET /api/v1/tasks/None took 0.0s [middleware.py:35]
2025-05-25 22:37:39 - httpx - INFO - HTTP Request: GET http://testserver/api/v1/tasks/None "HTTP/1.1 422 Unprocessable Entity" [_client.py:1025]
2025-05-25 22:37:39 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:39 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:40 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:40 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:40 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:40 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:40 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:40 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:40 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:40 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:40 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:40 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:40 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:40 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:40 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:41 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:41 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:41 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:41 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:41 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 2.0s [middleware.py:35]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:41 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:41 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:41 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:41 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:41 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:42 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:42 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:42 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:42 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:42 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:42 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:42 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:42 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:42 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:42 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:42 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:42 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:43 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:43 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:43 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:43 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.8s [middleware.py:35]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:43 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:43 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:43 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:43 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:43 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:43 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:44 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:44 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:44 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:45 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.8s [middleware.py:35]
2025-05-25 22:37:45 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:45 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:45 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:45 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:45 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:45 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:46 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:46 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:46 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:46 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:46 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:46 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:46 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:46 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:46 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:46 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:46 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:46 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:47 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:47 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:47 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:47 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:47 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:47 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:47 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:47 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:47 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:47 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:48 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:48 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:48 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:48 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:48 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:48 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:48 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:48 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:48 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:48 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:48 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:48 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:49 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:49 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.8s [middleware.py:35]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:49 - app.core.middleware - INFO - Request: GET /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:49 - app.core.middleware - INFO - Response: 200 for GET /api/v1/tasks/ took 0.0s [middleware.py:35]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: GET http://testserver/api/v1/tasks/?category=Bug%20Fix "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:37:49 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:49 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:49 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:49 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:49 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:49 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:49 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:49 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:50 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:50 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:50 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:50 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:50 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.6s [middleware.py:35]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:50 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:50 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:50 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:50 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:50 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:51 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:51 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:51 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:52 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.6s [middleware.py:35]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:52 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:52 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:52 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:52 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:52 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:53 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:53 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:53 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:53 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:53 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:53 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:53 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:53 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:53 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:53 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:53 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:53 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:54 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:54 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:54 - app.core.middleware - INFO - Request: GET /api/v1/tasks/stats/categories from testclient [middleware.py:22]
2025-05-25 22:37:54 - app.core.middleware - INFO - Response: 200 for GET /api/v1/tasks/stats/categories took 0.0s [middleware.py:35]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: GET http://testserver/api/v1/tasks/stats/categories "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:37:54 - app.core.middleware - INFO - Request: POST /api/v1/tasks/ from testclient [middleware.py:22]
2025-05-25 22:37:54 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:54 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:54 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [task_service.py:115]
2025-05-25 22:37:54 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:54 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:54 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:54 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:54 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:54 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:55 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:55 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:55 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:55 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:55 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:55 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:56 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:56 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:56 - app.core.middleware - INFO - Response: 201 for POST /api/v1/tasks/ took 1.9s [middleware.py:35]
2025-05-25 22:37:56 - httpx - INFO - HTTP Request: POST http://testserver/api/v1/tasks/ "HTTP/1.1 201 Created" [_client.py:1025]
2025-05-25 22:37:56 - app.core.middleware - INFO - Request: GET /api/v1/tasks/stats/agent-performance from testclient [middleware.py:22]
2025-05-25 22:37:56 - app.core.middleware - INFO - Response: 200 for GET /api/v1/tasks/stats/agent-performance took 0.1s [middleware.py:35]
2025-05-25 22:37:56 - httpx - INFO - HTTP Request: GET http://testserver/api/v1/tasks/stats/agent-performance "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:37:56 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:56 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:56 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:56 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:56 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:56 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:56 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:57 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:57 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:57 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:57 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:57 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:57 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:57 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:58 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:58 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:58 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:58 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:58 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:58 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:58 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:58 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:37:58 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:37:58 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:37:59 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:38:00 - httpx - INFO - HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK" [_client.py:1025]
2025-05-25 22:38:01 - root - INFO - Logging system initialized [logging_config.py:108]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [task_service.py:115]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - app.services.task_service - WARNING - Task Analyzer Agent failed: Agent Execution Error: An unexpected error occurred during task analysis: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [task_service.py:115]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - root - ERROR - LiteLLM call failed: litellm.BadRequestError: LLM Provider NOT provided. Pass in the LLM provider you are trying to call. You passed model=
 Pass model as E.g. For 'Huggingface' inference endpoints pass in `completion(model='huggingface/starcoder',..)` Learn more: https://docs.litellm.ai/docs/providers [llm.py:905]
2025-05-25 22:38:01 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:02 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:02 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:02 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:02 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:02 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:02 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:02 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:03 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:03 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:03 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:03 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:03 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:03 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:04 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:04 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:04 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:04 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:04 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:04 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash; provider = gemini [utils.py:2827]
2025-05-25 22:38:04 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=test_api_key "HTTP/1.1 400 Bad Request" [_client.py:1025]
2025-05-25 22:38:04 - root - ERROR - LiteLLM call failed: litellm.AuthenticationError: geminiException - {
  "error": {
    "code": 400,
    "message": "API key not valid. Please pass a valid API key.",
    "status": "INVALID_ARGUMENT",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.ErrorInfo",
        "reason": "API_KEY_INVALID",
        "domain": "googleapis.com",
        "metadata": {
          "service": "generativelanguage.googleapis.com"
        }
      },
      {
        "@type": "type.googleapis.com/google.rpc.LocalizedMessage",
        "locale": "en-US",
        "message": "API key not valid. Please pass a valid API key."
      }
    ]
  }
}
 [llm.py:905]
2025-05-25 22:38:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:38:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:38:05 - uvicorn.access - INFO - 127.0.0.1:51444 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:38:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:38:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:38:35 - uvicorn.access - INFO - 127.0.0.1:41186 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:39:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:39:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:39:05 - uvicorn.access - INFO - 127.0.0.1:54624 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:39:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:39:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:39:35 - uvicorn.access - INFO - 127.0.0.1:37344 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:40:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:40:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:40:05 - uvicorn.access - INFO - 127.0.0.1:43262 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:40:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:40:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:40:35 - uvicorn.access - INFO - 127.0.0.1:40876 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:41:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:41:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:41:05 - uvicorn.access - INFO - 127.0.0.1:44944 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:41:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:41:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:41:35 - uvicorn.access - INFO - 127.0.0.1:48128 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:42:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:42:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:42:05 - uvicorn.access - INFO - 127.0.0.1:40838 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:42:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:42:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:42:35 - uvicorn.access - INFO - 127.0.0.1:36310 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:43:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:43:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:43:05 - uvicorn.access - INFO - 127.0.0.1:36734 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:43:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:43:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:43:35 - uvicorn.access - INFO - 127.0.0.1:36968 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:44:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:44:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:44:05 - uvicorn.access - INFO - 127.0.0.1:37774 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:44:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:44:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:44:35 - uvicorn.access - INFO - 127.0.0.1:48114 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:45:05 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:45:05 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:45:05 - uvicorn.access - INFO - 127.0.0.1:54492 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
2025-05-25 22:45:35 - app.core.middleware - INFO - Request: GET /health from 127.0.0.1 [middleware.py:22]
2025-05-25 22:45:35 - app.core.middleware - INFO - Response: 200 for GET /health took 0.0s [middleware.py:35]
2025-05-25 22:45:35 - uvicorn.access - INFO - 127.0.0.1:33802 - "GET /health HTTP/1.1" 200 [httptools_impl.py:476]
